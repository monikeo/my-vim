
" VIMSCRIPT ------------------------------------------------
"
"
"
"
" Enable the marker method of folding.
" Use the marker method of folding.
augroup filetype_vim
    autocmd!
    autocmd FileType vim setlocal foldmethod=marker
augroup END

" If the current file type is HTML, set indentation to 2 spaces.
autocmd Filetype html setlocal tabstop=2 shiftwidth=2 expandtab 

" If Vim version is equal to or greater than 7.3 enable undofile.
" This allows you to undo changes to a file even after saving it.
if version >= 703
    set undodir=~/.vim/backup
    set undofile
    set undoreload=10000
endif


" You can split a window into sections by typing `:split` or `:vsplit`.
" Display cursorline and cursorcolumn ONLY in active window.
augroup cursor_off
    autocmd!
    autocmd WinLeave * set nocursorline nocursorcolumn
    autocmd WinEnter * set cursorline cursorcolumn
augroup END

" python new file with template
augroup NewPythonFile
    autocmd!
    autocmd BufNewFile *.py 0read ~/.vim/templates/python.template
augroup END

" html new file with template
augroup NewHTMLFile
    autocmd!
    autocmd BufNewFile *.html 0read ~/.vim/templates/html.template
augroup END

" .c new file with template
augroup NewCFile
    autocmd!
    autocmd BufNewFile *.c 0read ~/.vim/templates/c.template
augroup END

" .cpp new file with template
augroup NewCPPFile
    autocmd!
    autocmd BufNewFile *.cpp 0read ~/.vim/templates/cpp.template
augroup END

" .go new file with template
augroup NewGoFile
    autocmd!
    autocmd BufNewFile *.go 0read ~/.vim/templates/go.template
augroup END


" .rs new file with template
" but check first, using template only without cargo project
function! s:LoadRustTemplate()
    let l:cargo_dir = systemlist('git rev-parse --show-toplevel 2>/dev/null')[0]
    if v:shell_error
        " Not inside a Git repository, check for Cargo.toml
        let l:cargo_dir = finddir('Cargo.toml', '.;')
    endif

    if empty(l:cargo_dir)
        " Not inside a Cargo project, load the template
        0read ~/.vim/templates/rust.template
    endif
endfunction

" .rs new file with template
" call function LoadRustTemplate()
augroup NewRustFile
    autocmd!
    autocmd BufNewFile *.rs call s:LoadRustTemplate()
augroup END





" If GUI version of Vim is running set these options.
if has('gui_running')

    " Set the background tone.
    set background=dark

    " Set the color scheme.
    colorscheme molokai

    " Set a custom font you have installed on your computer.
    " Syntax: <font_name>\ <weight>\ <size>
    set guifont=Monospace\ Regular\ 12

    " Display more of the file by default.
    " Hide the toolbar.
    set guioptions-=T

    " Hide the the left-side scroll bar.
    set guioptions-=L

    " Hide the the left-side scroll bar.
    set guioptions-=r

    " Hide the the menu bar.
    set guioptions-=m

    " Hide the the bottom scroll bar.
    set guioptions-=b

    " Map the F4 key to toggle the menu, toolbar, and scroll bar.
    " <Bar> is the pipe character.
    " <CR> is the enter key.
    nnoremap <F4> :if &guioptions=~#'mTr'<Bar>
        \set guioptions-=mTr<Bar>
        \else<Bar>
        \set guioptions+=mTr<Bar>
        \endif<CR>

endif
